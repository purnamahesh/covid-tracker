{"version":3,"sources":["components/Navbar.js","components/BarGraph.js","screens/DistrictWide.js","components/StateWide.js","components/LineGraph.js","screens/Home.js","screens/About.js","App.js","index.js"],"names":["Navbar","useState","hideActions","setHideActions","className","to","onClick","type","BarGraph","labels","label","data","datasets","backgroundColor","options","layout","padding","DistrictWide","states","district","setDistrict","dis","getDistrictWise","a","fetch","then","res","text","Papa","parse","header","delimiter","newLine","forEach","item","undefined","push","Object","keys","sort","reduce","obj","key","console","log","useEffect","id","map","data-toggle","data-target","State","style","float","fontSize","scope","District","Active","Confirmed","Recovered","Deceased","Box","title","val","color","background","StateWide","total","Fragment","toString","Deaths","LineGraph","lables","classN","borderWidth","borderColor","maintainAspectRatio","Home","national","Date","About","App","setNational","settotal","setStates","getNationalWise","getStateWise","pop","shift","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.815597aa.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Navbar() {\r\n    const [hideActions, setHideActions] = useState(true)\r\n    return (\r\n        <div className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n            <Link className=\"navbar-brand\" to=\"/\">Covid-19 Tracker</Link>\r\n            <button onClick={() => setHideActions(!hideActions)} className=\"navbar-toggler\" type=\"button\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className={`${hideActions ? 'collapse' : ''} navbar-collapse ml-auto`}>\r\n                <ul className=\"navbar-nav ml-auto\">\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" onClick={() => setHideActions(!hideActions)} to=\"/\">Home</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" onClick={() => setHideActions(!hideActions)} to=\"/about\">About</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" onClick={() => setHideActions(!hideActions)} to=\"/districts\">District Wide</Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React from 'react'\r\nimport { Bar } from 'react-chartjs-2'\r\n\r\nfunction BarGraph({ labels, label, data }) {\r\n    return (\r\n        <Bar className=\"graph\"\r\n            data={{\r\n                labels: labels,\r\n                datasets: [\r\n                    {\r\n                        label: label,\r\n                        data: data,\r\n                        backgroundColor: 'red'\r\n                    },\r\n                ]\r\n            }}\r\n            options={{\r\n                layout: {\r\n                    padding: 40\r\n                }\r\n            }}\r\n        />\r\n    )\r\n}\r\n\r\nexport default BarGraph\r\n","import React, { useState, useEffect } from 'react'\r\nimport Papa from 'papaparse'\r\nimport BarGraph from '../components/BarGraph'\r\nimport { MdExpandMore } from 'react-icons/md'\r\n\r\nfunction DistrictWide({ states }) {\r\n    const [district, setDistrict] = useState([])\r\n    var dis = {}\r\n    const getStateNotes = (k) => {\r\n        states.forEach(item => {\r\n            if (item.State_code.localeCompare(k) === 0) return item.State_Notes\r\n        })\r\n    }\r\n    const getDistrictWise = async () => {\r\n        const data = await fetch('https://api.covid19india.org/csv/latest/district_wise.csv')\r\n            .then(res => res.text())\r\n        const val = Papa.parse(data, {\r\n            header: true,\r\n            delimiter: ',',\r\n            newLine: '\\n'\r\n        }).data\r\n        val.forEach(item => {\r\n            if (dis[item[\"State_Code\"]] === undefined) dis[item[\"State_Code\"]] = [item]\r\n            else dis[item[\"State_Code\"]].push(item)\r\n        })\r\n        dis = Object.keys(dis).sort().reduce(\r\n            (obj, key) => {\r\n                obj[key] = dis[key];\r\n                return obj;\r\n            }, {}\r\n        )\r\n        /* Object.keys(dis).forEach(key => dis[key].\r\n            sort((a, b) => {\r\n                if (a.District < b.District) return 1\r\n                else if (a.District > b.District) return -1\r\n                return 0\r\n            })) */\r\n        setDistrict(dis)\r\n        console.log(dis)\r\n    }\r\n    useEffect(() => {\r\n        getDistrictWise()\r\n    }, [])\r\n    return (\r\n        <div className=\"container-fluid my-3\">\r\n            <div className=\"accordion accordion-flush\" id=\"accordion\">\r\n                {\r\n                    Object.keys(district)\r\n                        .map(key => (\r\n                            <div className=\"accordion-item\" key={key}>\r\n                                <div className=\"accordion-header\" id={key}>\r\n                                    <a className=\"accordion-button collapsed list-group-item state-button\" data-toggle=\"collapse\" data-target={`#collapse${key}`}>{district[key][0].State}<MdExpandMore style={{ float: \"right\", fontSize: \"20px\" }} /></a>\r\n                                </div>\r\n                                <div className=\"accordion-collapse collapse\" id={`collapse${key}`}>\r\n                                    <div className=\"accordion-body\">\r\n                                        <div className='table-responsive-sm my-3' id=\"state-wide-table\">\r\n                                            <table className=\"table table-sm table-striped text-center table-hover\">\r\n                                                <thead className=\"thead-dark\">\r\n                                                    <tr>\r\n                                                        <th scope=\"col\">District</th>\r\n                                                        <th scope=\"col\">Active</th>\r\n                                                        <th scope=\"col\">Confirmed</th>\r\n                                                        <th scope=\"col\">Recovered</th>\r\n                                                        <th scope=\"col\">Deceased</th>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    {district[key].map(item => (\r\n                                                        <tr key={item.District}>\r\n                                                            <th>{item.District}</th>\r\n                                                            <td>{item.Active}</td>\r\n                                                            <td>{item.Confirmed}</td>\r\n                                                            <td>{item.Recovered}</td>\r\n                                                            <td>{item.Deceased}</td>\r\n                                                        </tr>))}\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n                                        <BarGraph labels={district[key].map(item => item[\"District\"])} label={`${district[key][0][\"State\"]} Confirmed`} data={district[key].map(item => item[\"Confirmed\"])} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                        )\r\n                }\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default DistrictWide\r\n","import React, { useState, useEffect } from 'react'\r\nimport Papa from 'papaparse'\r\n\r\nfunction Box({ title, val, color }) {\r\n    return (\r\n        <div className=\"col m-2 card-box p-2\" style={{ background: color }}>\r\n            <h6>{title}</h6>\r\n            <br />\r\n            <h3>{val}</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nfunction StateWide({ states, total }) {\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"row mb-5 px-5 text-center\">\r\n                <Box color=\"#ff073a\" title=\"Confirmed\" val={total.Confirmed} />\r\n                <Box color=\"#007bff\" title=\"Active\" val={total.Active} />\r\n                <Box color=\"#28a745\" title=\"Recovered\" val={total.Recovered} />\r\n                <Box color=\"#6c757d\" title=\"Deceased\" val={(total.Confirmed - total.Recovered - total.Active).toString()} />\r\n            </div>\r\n            <div className=\"table-responsive-sm\" id=\"state-wide-table\">\r\n                <table className=\"table table-sm table-striped text-center table-hover\">\r\n                    <thead className=\"thead-dark\">\r\n                        <tr>\r\n                            <th scope=\"col\">State</th>\r\n                            <th scope=\"col\">Active</th>\r\n                            <th scope=\"col\">Confirmed</th>\r\n                            <th scope=\"col\">Deaths</th>\r\n                            <th scope=\"col\">Recovered</th>\r\n                            <th scope=\"col\">Deceased</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            states.map(item => (\r\n                                <tr key={item.State}>\r\n                                    <th scope=\"row\">{item.State}</th>\r\n                                    <td>{item.Active}</td>\r\n                                    <td>{item.Confirmed}</td>\r\n                                    <td>{item.Deaths}</td>\r\n                                    <td>{item.Recovered}</td>\r\n                                    <td>{item.Confirmed - item.Recovered - item.Active}</td>\r\n                                </tr>\r\n                            ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default StateWide\r\n","import { Line } from 'react-chartjs-2'\r\nimport React from 'react'\r\nimport '../app.css'\r\nfunction LineGraph({ lables, label, data, color, classN }) {\r\n    return (\r\n        <div className=\"row m-0\">\r\n            <div className=\"col\">\r\n                <Line className={classN}\r\n                    data={{\r\n\r\n                        labels: lables,\r\n                        datasets: [\r\n                            {\r\n                                label: label,\r\n                                data: data,\r\n                                borderWidth: 1,\r\n                                color: 'white',\r\n                                borderColor: color,\r\n                            },\r\n                        ]\r\n                    }}\r\n                    options={{\r\n                        maintainAspectRatio: false,\r\n                        /*responsive: true, */\r\n                        layout: {\r\n                            padding: 40\r\n                        }\r\n                    }}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LineGraph;","import React from 'react'\r\nimport StateWide from '../components/StateWide'\r\nimport LineGraph from '../components/LineGraph'\r\n\r\nfunction Home({ national, states, total }) {\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row align-items-center mt-3\">\r\n                <div className=\"col-lg-6\">\r\n                    <StateWide states={states} total={total} />\r\n                </div>\r\n                <div className=\"col-lg-6\">\r\n                    <LineGraph lables={national.map(item => item.Date)} label=\"Daily Confirmed\" data={national.map(item => item[\"Daily Confirmed\"])} color='red' classN=\"row graph m-2\" />\r\n                    <LineGraph lables={national.map(item => item.Date)} label=\"Daily Deceased\" data={national.map(item => item[\"Daily Deceased\"])} color='crimson' classN=\"row graph m-2\" />\r\n                    <LineGraph lables={national.map(item => item.Date)} label=\"Total Confirmed\" data={national.map(item => item[\"Total Confirmed\"])} color='tomato' classN=\"row graph m-2\" />\r\n                    <LineGraph lables={national.map(item => item.Date)} label=\"Total Deceased\" data={national.map(item => item[\"Total Deceased\"])} color='coral' classN=\"row graph m-2\" />\r\n                    <LineGraph lables={national.map(item => item.Date)} label=\"Total Recovered\" data={national.map(item => item[\"Total Recovered\"])} color='green' classN=\"row graph m-2\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Home","import React from 'react'\r\n\r\nexport default function About() {\r\n    return (\r\n        <div>\r\n            <h1>About</h1>\r\n        </div>\r\n    )\r\n}\r\n","import Navbar from './components/Navbar'\nimport DistrictWide from './screens/DistrictWide'\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom'\nimport Home from './screens/Home'\nimport About from './screens/About'\nimport Papa from 'papaparse'\nimport React, { useState, useEffect } from 'react'\n\nfunction App() {\n  const [national, setNational] = useState([])\n  const [total, settotal] = useState([])\n  const [states, setStates] = useState([])\n\n  const getNationalWise = async () => {\n    const data = await fetch('https://api.covid19india.org/csv/latest/case_time_series.csv')\n      .then(res => res.text())\n    const val = Papa.parse(data, {\n      header: true,\n      delimiter: ',',\n      newLine: '\\n'\n    }).data\n    setNational(val)\n    console.log(val)\n  }\n  const getStateWise = async () => {\n    const data = await fetch('https://api.covid19india.org/csv/latest/state_wise.csv')\n      .then(res => res.text())\n    const val = Papa.parse(data, {\n      header: true,\n      delimiter: ',',\n      newLine: '\\n'\n    }).data\n    val.pop()\n    settotal(val.shift())\n    setStates(val)\n    console.log(val)\n  }\n\n  useEffect(() => {\n    if (national !== [])\n      getNationalWise()\n    if (states !== [])\n      getStateWise()\n  }, [])\n\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route path=\"/\" exact>\n            <Home national={national} states={states} total={total} />\n          </Route>\n          <Route path=\"/districts\">\n            <DistrictWide states={states} />\n          </Route>\n          <Route path=\"/about\" component={About} />\n        </Switch>\n\n      </div>\n    </Router>\n  );\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}